State 0:
          program ::= * exp
          exp ::= * CELL_SYMBOL
          exp ::= * CELL_BOOL
          exp ::= * CELL_CHAR
          exp ::= * CELL_SINT64
          exp ::= * CELL_REAL64
          exp ::= * CELL_STRING
          exp ::= * CELL_CONS
          exp ::= * CELL_CLOSURE
          exp ::= * CELL_FFI
          exp ::= * LPAR RPAR
          exp ::= * LPAR exp_list RPAR

                   CELL_SYMBOL shift  16
                     CELL_BOOL shift  15
                     CELL_CHAR shift  14
                   CELL_SINT64 shift  13
                   CELL_REAL64 shift  12
                   CELL_STRING shift  11
                     CELL_CONS shift  10
                  CELL_CLOSURE shift  9
                      CELL_FFI shift  8
                          LPAR shift  1
                           exp shift  3
                       program accept

State 1:
          exp ::= * CELL_SYMBOL
          exp ::= * CELL_BOOL
          exp ::= * CELL_CHAR
          exp ::= * CELL_SINT64
          exp ::= * CELL_REAL64
          exp ::= * CELL_STRING
          exp ::= * CELL_CONS
          exp ::= * CELL_CLOSURE
          exp ::= * CELL_FFI
          exp ::= * LPAR RPAR
          exp ::= LPAR * RPAR
          exp ::= * LPAR exp_list RPAR
          exp ::= LPAR * exp_list RPAR
          exp_list ::= * exp
          exp_list ::= * exp_list exp

                   CELL_SYMBOL shift  16
                     CELL_BOOL shift  15
                     CELL_CHAR shift  14
                   CELL_SINT64 shift  13
                   CELL_REAL64 shift  12
                   CELL_STRING shift  11
                     CELL_CONS shift  10
                  CELL_CLOSURE shift  9
                      CELL_FFI shift  8
                          LPAR shift  1
                          RPAR shift  7
                           exp shift  4
                      exp_list shift  2

State 2:
          exp ::= * CELL_SYMBOL
          exp ::= * CELL_BOOL
          exp ::= * CELL_CHAR
          exp ::= * CELL_SINT64
          exp ::= * CELL_REAL64
          exp ::= * CELL_STRING
          exp ::= * CELL_CONS
          exp ::= * CELL_CLOSURE
          exp ::= * CELL_FFI
          exp ::= * LPAR RPAR
          exp ::= * LPAR exp_list RPAR
          exp ::= LPAR exp_list * RPAR
          exp_list ::= exp_list * exp

                   CELL_SYMBOL shift  16
                     CELL_BOOL shift  15
                     CELL_CHAR shift  14
                   CELL_SINT64 shift  13
                   CELL_REAL64 shift  12
                   CELL_STRING shift  11
                     CELL_CONS shift  10
                  CELL_CLOSURE shift  9
                      CELL_FFI shift  8
                          LPAR shift  1
                          RPAR shift  6
                           exp shift  5

State 3:
      (0) program ::= exp *

                             $ reduce 0

State 4:
     (12) exp_list ::= exp *

                     {default} reduce 12

State 5:
     (13) exp_list ::= exp_list exp *

                     {default} reduce 13

State 6:
     (11) exp ::= LPAR exp_list RPAR *

                     {default} reduce 11

State 7:
     (10) exp ::= LPAR RPAR *

                     {default} reduce 10

State 8:
      (9) exp ::= CELL_FFI *

                     {default} reduce 9

State 9:
      (8) exp ::= CELL_CLOSURE *

                     {default} reduce 8

State 10:
      (7) exp ::= CELL_CONS *

                     {default} reduce 7

State 11:
      (6) exp ::= CELL_STRING *

                     {default} reduce 6

State 12:
      (5) exp ::= CELL_REAL64 *

                     {default} reduce 5

State 13:
      (4) exp ::= CELL_SINT64 *

                     {default} reduce 4

State 14:
      (3) exp ::= CELL_CHAR *

                     {default} reduce 3

State 15:
      (2) exp ::= CELL_BOOL *

                     {default} reduce 2

State 16:
      (1) exp ::= CELL_SYMBOL *

                     {default} reduce 1

----------------------------------------------------
Symbols:
    0: $:
    1: CELL_SYMBOL
    2: CELL_BOOL
    3: CELL_CHAR
    4: CELL_SINT64
    5: CELL_REAL64
    6: CELL_STRING
    7: CELL_CONS
    8: CELL_CLOSURE
    9: CELL_FFI
   10: LPAR
   11: RPAR
   12: error:
   13: exp: CELL_SYMBOL CELL_BOOL CELL_CHAR CELL_SINT64 CELL_REAL64 CELL_STRING CELL_CONS CELL_CLOSURE CELL_FFI LPAR
   14: program: CELL_SYMBOL CELL_BOOL CELL_CHAR CELL_SINT64 CELL_REAL64 CELL_STRING CELL_CONS CELL_CLOSURE CELL_FFI LPAR
   15: exp_list: CELL_SYMBOL CELL_BOOL CELL_CHAR CELL_SINT64 CELL_REAL64 CELL_STRING CELL_CONS CELL_CLOSURE CELL_FFI LPAR
