State 0:
          program ::= * cell
          cell ::= * CELL_SYMBOL
          cell ::= * CELL_BOOL
          cell ::= * CELL_CHAR
          cell ::= * CELL_SINT64
          cell ::= * CELL_REAL64
          cell ::= * CELL_STRING
          cell ::= * CELL_FREE
          cell ::= * CELL_CONS
          cell ::= * CELL_LAMBDA
          cell ::= * CELL_PROCEDURE
          cell ::= * CELL_IF
          cell ::= * QUOTE LPAR RPAR
          cell ::= * QUOTE cell
          cell ::= * LPAR cell_list RPAR

                   CELL_SYMBOL shift  21
                     CELL_BOOL shift  20
                     CELL_CHAR shift  19
                   CELL_SINT64 shift  18
                   CELL_REAL64 shift  17
                   CELL_STRING shift  16
                     CELL_FREE shift  15
                     CELL_CONS shift  14
                   CELL_LAMBDA shift  13
                CELL_PROCEDURE shift  12
                       CELL_IF shift  11
                         QUOTE shift  4
                          LPAR shift  2
                          cell shift  5
                       program accept

State 1:
          cell ::= * CELL_SYMBOL
          cell ::= * CELL_BOOL
          cell ::= * CELL_CHAR
          cell ::= * CELL_SINT64
          cell ::= * CELL_REAL64
          cell ::= * CELL_STRING
          cell ::= * CELL_FREE
          cell ::= * CELL_CONS
          cell ::= * CELL_LAMBDA
          cell ::= * CELL_PROCEDURE
          cell ::= * CELL_IF
          cell ::= * QUOTE LPAR RPAR
          cell ::= QUOTE LPAR * RPAR
          cell ::= * QUOTE cell
          cell ::= * LPAR cell_list RPAR
          cell ::= LPAR * cell_list RPAR
          cell_list ::= * cell
          cell_list ::= * cell_list cell

                   CELL_SYMBOL shift  21
                     CELL_BOOL shift  20
                     CELL_CHAR shift  19
                   CELL_SINT64 shift  18
                   CELL_REAL64 shift  17
                   CELL_STRING shift  16
                     CELL_FREE shift  15
                     CELL_CONS shift  14
                   CELL_LAMBDA shift  13
                CELL_PROCEDURE shift  12
                       CELL_IF shift  11
                         QUOTE shift  4
                          LPAR shift  2
                          RPAR shift  10
                          cell shift  7
                     cell_list shift  3

State 2:
          cell ::= * CELL_SYMBOL
          cell ::= * CELL_BOOL
          cell ::= * CELL_CHAR
          cell ::= * CELL_SINT64
          cell ::= * CELL_REAL64
          cell ::= * CELL_STRING
          cell ::= * CELL_FREE
          cell ::= * CELL_CONS
          cell ::= * CELL_LAMBDA
          cell ::= * CELL_PROCEDURE
          cell ::= * CELL_IF
          cell ::= * QUOTE LPAR RPAR
          cell ::= * QUOTE cell
          cell ::= * LPAR cell_list RPAR
          cell ::= LPAR * cell_list RPAR
          cell_list ::= * cell
          cell_list ::= * cell_list cell

                   CELL_SYMBOL shift  21
                     CELL_BOOL shift  20
                     CELL_CHAR shift  19
                   CELL_SINT64 shift  18
                   CELL_REAL64 shift  17
                   CELL_STRING shift  16
                     CELL_FREE shift  15
                     CELL_CONS shift  14
                   CELL_LAMBDA shift  13
                CELL_PROCEDURE shift  12
                       CELL_IF shift  11
                         QUOTE shift  4
                          LPAR shift  2
                          cell shift  7
                     cell_list shift  3

State 3:
          cell ::= * CELL_SYMBOL
          cell ::= * CELL_BOOL
          cell ::= * CELL_CHAR
          cell ::= * CELL_SINT64
          cell ::= * CELL_REAL64
          cell ::= * CELL_STRING
          cell ::= * CELL_FREE
          cell ::= * CELL_CONS
          cell ::= * CELL_LAMBDA
          cell ::= * CELL_PROCEDURE
          cell ::= * CELL_IF
          cell ::= * QUOTE LPAR RPAR
          cell ::= * QUOTE cell
          cell ::= * LPAR cell_list RPAR
          cell ::= LPAR cell_list * RPAR
          cell_list ::= cell_list * cell

                   CELL_SYMBOL shift  21
                     CELL_BOOL shift  20
                     CELL_CHAR shift  19
                   CELL_SINT64 shift  18
                   CELL_REAL64 shift  17
                   CELL_STRING shift  16
                     CELL_FREE shift  15
                     CELL_CONS shift  14
                   CELL_LAMBDA shift  13
                CELL_PROCEDURE shift  12
                       CELL_IF shift  11
                         QUOTE shift  4
                          LPAR shift  2
                          RPAR shift  9
                          cell shift  8

State 4:
          cell ::= * CELL_SYMBOL
          cell ::= * CELL_BOOL
          cell ::= * CELL_CHAR
          cell ::= * CELL_SINT64
          cell ::= * CELL_REAL64
          cell ::= * CELL_STRING
          cell ::= * CELL_FREE
          cell ::= * CELL_CONS
          cell ::= * CELL_LAMBDA
          cell ::= * CELL_PROCEDURE
          cell ::= * CELL_IF
          cell ::= * QUOTE LPAR RPAR
          cell ::= QUOTE * LPAR RPAR
          cell ::= * QUOTE cell
          cell ::= QUOTE * cell
          cell ::= * LPAR cell_list RPAR

                   CELL_SYMBOL shift  21
                     CELL_BOOL shift  20
                     CELL_CHAR shift  19
                   CELL_SINT64 shift  18
                   CELL_REAL64 shift  17
                   CELL_STRING shift  16
                     CELL_FREE shift  15
                     CELL_CONS shift  14
                   CELL_LAMBDA shift  13
                CELL_PROCEDURE shift  12
                       CELL_IF shift  11
                         QUOTE shift  4
                          LPAR shift  1
                          cell shift  6

State 5:
      (0) program ::= cell *

                             $ reduce 0

State 6:
     (13) cell ::= QUOTE cell *

                     {default} reduce 13

State 7:
     (15) cell_list ::= cell *

                     {default} reduce 15

State 8:
     (16) cell_list ::= cell_list cell *

                     {default} reduce 16

State 9:
     (14) cell ::= LPAR cell_list RPAR *

                     {default} reduce 14

State 10:
     (12) cell ::= QUOTE LPAR RPAR *

                     {default} reduce 12

State 11:
     (11) cell ::= CELL_IF *

                     {default} reduce 11

State 12:
     (10) cell ::= CELL_PROCEDURE *

                     {default} reduce 10

State 13:
      (9) cell ::= CELL_LAMBDA *

                     {default} reduce 9

State 14:
      (8) cell ::= CELL_CONS *

                     {default} reduce 8

State 15:
      (7) cell ::= CELL_FREE *

                     {default} reduce 7

State 16:
      (6) cell ::= CELL_STRING *

                     {default} reduce 6

State 17:
      (5) cell ::= CELL_REAL64 *

                     {default} reduce 5

State 18:
      (4) cell ::= CELL_SINT64 *

                     {default} reduce 4

State 19:
      (3) cell ::= CELL_CHAR *

                     {default} reduce 3

State 20:
      (2) cell ::= CELL_BOOL *

                     {default} reduce 2

State 21:
      (1) cell ::= CELL_SYMBOL *

                     {default} reduce 1

----------------------------------------------------
Symbols:
    0: $:
    1: CELL_SYMBOL
    2: CELL_BOOL
    3: CELL_CHAR
    4: CELL_SINT64
    5: CELL_REAL64
    6: CELL_STRING
    7: CELL_FREE
    8: CELL_CONS
    9: CELL_LAMBDA
   10: CELL_PROCEDURE
   11: CELL_IF
   12: QUOTE
   13: LPAR
   14: RPAR
   15: error:
   16: cell: CELL_SYMBOL CELL_BOOL CELL_CHAR CELL_SINT64 CELL_REAL64 CELL_STRING CELL_FREE CELL_CONS CELL_LAMBDA CELL_PROCEDURE CELL_IF QUOTE LPAR
   17: program: CELL_SYMBOL CELL_BOOL CELL_CHAR CELL_SINT64 CELL_REAL64 CELL_STRING CELL_FREE CELL_CONS CELL_LAMBDA CELL_PROCEDURE CELL_IF QUOTE LPAR
   18: cell_list: CELL_SYMBOL CELL_BOOL CELL_CHAR CELL_SINT64 CELL_REAL64 CELL_STRING CELL_FREE CELL_CONS CELL_LAMBDA CELL_PROCEDURE CELL_IF QUOTE LPAR
